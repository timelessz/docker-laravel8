version: "3.8"

networks:
  laravel:
    driver: bridge

services:
  #  nginx环境构建
  nginx:
    build:
      context: .
      dockerfile: compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8088:80"
      - "9001:9001"
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel


  # mysql 构建
  mysql:
    image: mysql:8.0.26
    container_name: mysql
    restart: always
    # docker-compose up启动又停止，需要加tty为true
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./compose/dbdata:/var/lib/mysql/
    networks:
      - laravel


  # php 环境构建
  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    volumes:
      - ./source:/var/www/html:delegated
    ports:
      - "9000:9000"
    networks:
      - laravel

  # phpmyadmin安装
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - mysql
    ports:
      - "8081:80"
    networks:
      - laravel
    links:
      - mysql

  # redis 安装
  redis:
    image: redis:6.2.5-buster
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - laravel

  # npm 操作
  npm:
    image: node:buster
    container_name: npm
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ 'npm' ]



